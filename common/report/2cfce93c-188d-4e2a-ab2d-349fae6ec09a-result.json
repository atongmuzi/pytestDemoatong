{"name": "test_redis", "status": "broken", "statusDetails": {"message": "redis.exceptions.DataError: Invalid input of type: 'list'. Convert to a bytes, string, int or float first.", "trace": "def test_redis():\n        logger.info(\"开始执行===>\")\n        pool = redis.ConnectionPool(host=\"192.168.4.4\", port=6379, password=\"0.123abc\", db=0)\n        r = redis.Redis(connection_pool=pool)\n        logger.info(\"r is the redis===>{}\".format(r))\n        logger.info(\"dbsize is===>{}\".format(r.dbsize()))\n        # logger.info(\"hash is ==>\".format(r.hgetall(\"pookie:token:user_230\")))\n        logger.info(\"All keys of tokens is ===>{}\".format(r.hkeys(\"pookie:tokens:user_1346\")))\n        logger.info(\"All keys of token is ===>{}\".format(r.get(\"pookie:token:user_1346\")))\n        r.delete(\"pookie:token:user_1346\")\n>       r.hdel(\"pookie:tokens:user_1346\", r.hkeys(\"pookie:tokens:user_1346\"))\n\nredis_operate.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.7/site-packages/redis/client.py:3002: in hdel\n    return self.execute_command('HDEL', name, *keys)\n../venv/lib/python3.7/site-packages/redis/client.py:900: in execute_command\n    conn.send_command(*args)\n../venv/lib/python3.7/site-packages/redis/connection.py:725: in send_command\n    self.send_packed_command(self.pack_command(*args),\n../venv/lib/python3.7/site-packages/redis/connection.py:775: in pack_command\n    for arg in imap(self.encoder.encode, args):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <redis.connection.Encoder object at 0x106084400>\nvalue = [b'\\xac\\xed\\x00\\x05sr\\x00\\x11java.lang.Integer\\x12\\xe2\\xa0\\xa4\\xf7\\x81\\x878\\x02\\x00\\x01I\\x00\\x05valuexr\\x00\\x10java.lang.Number\\x86\\xac\\x95\\x1d\\x0b\\x94\\xe0\\x8b\\x02\\x00\\x00xp\\x00\\x00\\x00\\x02']\n\n    def encode(self, value):\n        \"Return a bytestring or bytes-like representation of the value\"\n        if isinstance(value, (bytes, memoryview)):\n            return value\n        elif isinstance(value, bool):\n            # special case bool since it is a subclass of int\n            raise DataError(\"Invalid input of type: 'bool'. Convert to a \"\n                            \"bytes, string, int or float first.\")\n        elif isinstance(value, float):\n            value = repr(value).encode()\n        elif isinstance(value, (int, long)):\n            # python 2 repr() on longs is '123L', so use str() instead\n            value = str(value).encode()\n        elif not isinstance(value, basestring):\n            # a value we don't know how to deal with. throw an error\n            typename = type(value).__name__\n            raise DataError(\"Invalid input of type: '%s'. Convert to a \"\n>                           \"bytes, string, int or float first.\" % typename)\nE           redis.exceptions.DataError: Invalid input of type: 'list'. Convert to a bytes, string, int or float first.\n\n../venv/lib/python3.7/site-packages/redis/connection.py:120: DataError"}, "attachments": [{"name": "log", "source": "1e181b5a-384e-43a5-a5ad-098b5745f6fc-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "07e3e861-43c0-44c3-9c66-5b0e5668c377-attachment.txt", "type": "text/plain"}], "start": 1636099092082, "stop": 1636099092789, "uuid": "ac7f53e1-8873-4d31-bfbe-011f6d75f086", "historyId": "2470b976c53a3ba91da07979e4d471a2", "testCaseId": "ccdebc5849e417ff9042ff98197e66c5", "fullName": "common.redis_operate#test_redis", "labels": [{"name": "parentSuite", "value": "common"}, {"name": "suite", "value": "redis_operate"}, {"name": "host", "value": "tongchunyan.local"}, {"name": "thread", "value": "65349-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "common.redis_operate"}]}