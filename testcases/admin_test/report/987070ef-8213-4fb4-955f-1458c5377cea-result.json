{"name": "test_refund", "status": "broken", "statusDetails": {"message": "TypeError: unsupported operand type(s) for +: 'int' and 'str'", "trace": "self = <testcases.admin_test.test_refund_00001.TestAdminRefund object at 0x108f547f0>\n\n    def test_refund(self):\n        sql = \"select order_no from user_order where user_id in('1415') and\" \\\n              \" status not in(0,30,31,300) and real_price >= 0.1 limit 3 \"\n        data = db.select_db(sql)\n        logger.info(\"data===>{}\".format(data))\n        for i in range(len(data)):\n            logger.info(data[i][\"order_no\"])\n            order_no = data[i][\"order_no\"]\n            logger.info(\"*************** 开始执行用例 *************** /n\")\n>           result = refund_admin(order_no)\n\ntest_refund_00001.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../operation/admin.py:22: in refund_admin\n    res = admin.refund(json=json_data, headers=headers)\n../../api/admin.py:17: in refund\n    return self.post(\"/adm/order/refund\", **kwargs)\n../../core/rest_client.py:16: in post\n    return self.request(url, \"POST\", data, json, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.admin.Admin object at 0x108e93240>, url = '/adm/order/refund'\nmethod = 'POST', data = None\njson = {'order_no': '2021111814101415825309', 'out_refund_reason': '测试', 'refund_reason': 'test', 'refund_type': 2, ...}\nkwargs = {'headers': {'Authorization': 'NTc6ODU0NldTNXUxZ3NVRFpJMW9YbzdLakc1OTA0'}}\n\n    def request(self, url, method, data=None, json=None, **kwargs):\n>       url = self.api_root_url + url\nE       TypeError: unsupported operand type(s) for +: 'int' and 'str'\n\n../../core/rest_client.py:28: TypeError"}, "attachments": [{"name": "log", "source": "a5532cdf-46db-40fc-9e53-099c3aa980af-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "d101227a-0a0c-4ac7-a852-5e795782d7ce-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c1a8e339-0fba-46ec-9769-5c0470728019-attachment.txt", "type": "text/plain"}], "start": 1637292113202, "stop": 1637292113278, "uuid": "156a555b-814b-4cb9-8959-6f0d4c55d320", "historyId": "a0a6875d0f15aa537f9fb7f8ef19067b", "testCaseId": "392cae74f4aea4f9774e5ed6ec104378", "fullName": "testcases.admin_test.test_refund_00001.TestAdminRefund#test_refund", "labels": [{"name": "parentSuite", "value": "testcases.admin_test"}, {"name": "suite", "value": "test_refund_00001"}, {"name": "subSuite", "value": "TestAdminRefund"}, {"name": "host", "value": "tongchunyan.local"}, {"name": "thread", "value": "56236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.admin_test.test_refund_00001"}]}