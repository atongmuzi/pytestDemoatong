{"name": "test_reward_task[1528-3-2-242]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcases.admin_test.test_reward_00001.TestAdminReward object at 0x1071d1710>\nuser_id = '1528', v_type = 3, num = 2, coupon_id = 242\n\n    @pytest.mark.parametrize(\"user_id,v_type,num,coupon_id\", api_data[\"test_reward_task\"])\n    def test_reward_task(self, user_id, v_type, num, coupon_id):\n        logger.info(\"开始准备手工发放正常通用券\")\n    \n>       result = reward_task(user_id, v_type, num, coupon_id)\n\ntest_reward_00001.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../operation/admin.py:51: in reward_task\n    return res_deal(res)\n../../common/res_deal.py:7: in res_deal\n    if res.json()[\"code\"] == 0 and \"success\" in res.json()[\"msg\"]:\n../../venv/lib/python3.7/site-packages/requests/models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py:348: in loads\n    return _default_decoder.decode(s)\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x106a67390>\ns = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\\n\\n<html xmlns=\"htt...EPEL ]\"\\n                    width=\"88\" height=\"31\" /></a>\\n            </div>\\n        </div>\\n    </body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/decoder.py:355: JSONDecodeError"}, "attachments": [{"name": "log", "source": "50826cc8-6ca7-4d00-8b26-c7a99ac8b0bc-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "9e452829-930c-4ba4-bcf8-8624e4ffcfe5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "user_id", "value": "'1528'"}, {"name": "v_type", "value": "3"}, {"name": "num", "value": "2"}, {"name": "coupon_id", "value": "242"}], "start": 1637569229020, "stop": 1637569229118, "uuid": "73fb79f6-d07e-40d1-bf7c-0d21beeb3543", "historyId": "2767d62c39fc734ed7b8e18cbe6dfd38", "testCaseId": "4e07f949b7183a6addb2e23486dedfa2", "fullName": "testcases.admin_test.test_reward_00001.TestAdminReward#test_reward_task", "labels": [{"name": "parentSuite", "value": "testcases.admin_test"}, {"name": "suite", "value": "test_reward_00001"}, {"name": "subSuite", "value": "TestAdminReward"}, {"name": "host", "value": "tongchunyan.local"}, {"name": "thread", "value": "73348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.admin_test.test_reward_00001"}]}