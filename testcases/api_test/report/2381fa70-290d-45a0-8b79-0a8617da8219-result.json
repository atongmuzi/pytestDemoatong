{"name": "test_trade_preorder", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"Response\") to str", "trace": "self = <testcases.api_test.test_06_pre_order.TestTradePreOrder object at 0x10f15f9e8>\ntestcase_data = [[1, 378, 1, '20210909424640020015272-6', '[]', False, ...]]\n\n    def test_trade_preorder(self, testcase_data):\n        order_type = testcase_data[0][0]\n        tem_id = testcase_data[0][1]\n        sku_type = testcase_data[0][2]\n        sku_no = testcase_data[0][3]\n        act_id_list = testcase_data[0][4]\n        use_pcoin = testcase_data[0][5]\n        except_result = testcase_data[0][6]\n        except_code = testcase_data[0][7]\n        logger.info(\"*************** 开始执行用例 *************** /n\")\n        logger.info(order_type)\n>       result = pre_trade(order_type, tem_id, sku_type, sku_no, act_id_list, use_pcoin)\n\ntest_06_pre_order.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\norder_type = 1, item_id = 378, sku_type = 1\nsku_no = '20210909424640020015272-6', act_id_list = '[]', use_pcoin = False\n\n    def pre_trade(order_type, item_id, sku_type, sku_no, act_id_list, use_pcoin):\n        \"\"\"\n        预下单，选择盲盒的盒子\n        :return:自定义的关键字返回结果 result\n        \"\"\"\n        result = ResultBase()\n        json_data = {\n            \"order_type\": order_type,\n            \"item_id\": item_id,\n            \"sku_type\": sku_type,\n            \"sku_no\": sku_no,\n            \"act_id_list\": act_id_list,\n            \"use_pcoin\": use_pcoin\n        }\n        header = {\n            \"Authorization\": \"MTE5NzozNTcweHdIb2VVUlV2c2kxS21XRWtIZTcwNTU6Mg==\",\n            \"Content-Type\": \"application/json\"\n    \n        }\n        res = order.pre_order(json=json_data, headers=header)\n>       logger.info(\"-----res is -----\" + res)\nE       TypeError: can only concatenate str (not \"Response\") to str\n\n../../operation/order.py:26: TypeError"}, "attachments": [{"name": "log", "source": "f20867bd-ea8d-410f-93bb-15ff0f60dbe4-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "aee3fb53-4585-4f8d-9e7c-3a4fadd31301-attachment.txt", "type": "text/plain"}], "start": 1631242625705, "stop": 1631242625866, "uuid": "9a9cb6a1-de68-4758-9c33-3e62b6fe3c9d", "historyId": "1c6d2cccfd460379c8fdc81e721e3492", "testCaseId": "61fc93d62328c621a7937fbabda76f06", "fullName": "testcases.api_test.test_06_pre_order.TestTradePreOrder#test_trade_preorder", "labels": [{"name": "severity", "value": "trivial"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "真正下单之前的预下单--获取一些关键信息"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_06_pre_order"}, {"name": "subSuite", "value": "TestTradePreOrder"}, {"name": "host", "value": "tongchunyan.local"}, {"name": "thread", "value": "84776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_06_pre_order"}]}