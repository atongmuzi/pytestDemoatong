{
  "uid" : "c310cdea05c2ad34",
  "name" : "test_trade_wx_preorder",
  "fullName" : "testcases.api_test.test_07_item.TestTradePreItem#test_trade_wx_preorder",
  "historyId" : "7895858351580925ca002a7fcee281a4",
  "time" : {
    "start" : 1648188196572,
    "stop" : 1648188196637,
    "duration" : 65
  },
  "description" : "预下单---》微信支付预下单",
  "descriptionHtml" : "<p>预下单---》微信支付预下单</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 接口的返回码：【-1】，接口返回的信息：user.error.no_login\nassert False is True\n +  where False = <class 'core.result_base.ResultBase'>.success",
  "statusTrace" : "self = <testcases.api_test.test_07_item.TestTradePreItem object at 0x10c3a8400>\ntestcase_data = {'act_id_list': [], 'amount': 0.01, 'app_allow_guess': True, 'except_code': 0, ...}\n\n    def test_trade_wx_preorder(self, testcase_data):\n        \"\"\"预下单---》微信支付预下单\"\"\"\n        step_5()\n        order_type = testcase_data[\"order_type\"]\n        item_id = TestTradePreItem.item_id\n        sku_type = testcase_data[\"sku_type\"]\n        sku_pick_no = itemSelect.sku_no\n        amount = testcase_data[\"amount\"]\n        act_id_list = testcase_data[\"act_id_list\"]\n        app_allow_guess = testcase_data[\"app_allow_guess\"]\n        use_pcoin = testcase_data[\"use_pcoin\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        logger.info(\"*************** 开始执行用例 *************** /n\")\n        result = pre_trade_wx(order_type, item_id, sku_type, sku_pick_no, amount, act_id_list, app_allow_guess,\n                              use_pcoin)\n>       assert result.success is True, result.error\nE       AssertionError: 接口的返回码：【-1】，接口返回的信息：user.error.no_login\nE       assert False is True\nE        +  where False = <class 'core.result_base.ResultBase'>.success\n\ntest_07_item.py:144: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "testcase_data",
    "time" : {
      "start" : 1648188196571,
      "stop" : 1648188196571,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "预下单---》微信支付预下单",
    "status" : "failed",
    "statusMessage" : "AssertionError: 接口的返回码：【-1】，接口返回的信息：user.error.no_login\nassert False is True\n +  where False = <class 'core.result_base.ResultBase'>.success",
    "statusTrace" : "self = <testcases.api_test.test_07_item.TestTradePreItem object at 0x10c3a8400>\ntestcase_data = {'act_id_list': [], 'amount': 0.01, 'app_allow_guess': True, 'except_code': 0, ...}\n\n    def test_trade_wx_preorder(self, testcase_data):\n        \"\"\"预下单---》微信支付预下单\"\"\"\n        step_5()\n        order_type = testcase_data[\"order_type\"]\n        item_id = TestTradePreItem.item_id\n        sku_type = testcase_data[\"sku_type\"]\n        sku_pick_no = itemSelect.sku_no\n        amount = testcase_data[\"amount\"]\n        act_id_list = testcase_data[\"act_id_list\"]\n        app_allow_guess = testcase_data[\"app_allow_guess\"]\n        use_pcoin = testcase_data[\"use_pcoin\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        logger.info(\"*************** 开始执行用例 *************** /n\")\n        result = pre_trade_wx(order_type, item_id, sku_type, sku_pick_no, amount, act_id_list, app_allow_guess,\n                              use_pcoin)\n>       assert result.success is True, result.error\nE       AssertionError: 接口的返回码：【-1】，接口返回的信息：user.error.no_login\nE       assert False is True\nE        +  where False = <class 'core.result_base.ResultBase'>.success\n\ntest_07_item.py:144: AssertionError",
    "steps" : [ {
      "name" : "步骤5：预下单--》选择微信为支付方式",
      "time" : {
        "start" : 1648188196572,
        "stop" : 1648188196572,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "32575a11f9dda876",
      "name" : "log",
      "source" : "32575a11f9dda876.txt",
      "type" : "text/plain",
      "size" : 1253
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "针对单个接口的测试"
  }, {
    "name" : "severity",
    "value" : "trivial"
  }, {
    "name" : "feature",
    "value" : "盲盒详情"
  }, {
    "name" : "parentSuite",
    "value" : "testcases.api_test"
  }, {
    "name" : "suite",
    "value" : "test_07_item"
  }, {
    "name" : "subSuite",
    "value" : "TestTradePreItem"
  }, {
    "name" : "host",
    "value" : "tongchunyan.local"
  }, {
    "name" : "thread",
    "value" : "64252-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.api_test.test_07_item"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "trivial",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c310cdea05c2ad34.json",
  "parameterValues" : [ ]
}