{"name": "test_user_pre_trade[1-308-1-20210511420000112137694-2-act_id_list0-False-True-0-success]", "status": "failed", "statusDetails": {"message": "AssertionError: 接口返回码：【 -1 】,返回信息：user.error.login_invalid \nassert False == True", "trace": "self = <testcases.api_test.test_06_pre_order.TestUserTrade object at 0x1092cc7f0>\norder_type = 1, item_id = 308, sku_type = 1\nsku_no = '20210511420000112137694-2', act_id_list = [], use_pcoin = False\nexcept_result = True, except_code = 0, except_msg = 'success'\n\n    @pytest.mark.parametrize(\n        \"order_type, item_id, sku_type, sku_no, act_id_list, use_pcoin,\"\n        \" except_result, except_code, except_msg\", api_data[\"test_pre_trade\"])\n    @pytest.mark.usefixtures(\"delete_user_orders\")\n    def test_user_pre_trade(self, order_type, item_id, sku_type, sku_no, act_id_list, use_pcoin, except_result,\n                            except_code, except_msg):\n        logger.info(\"**********开始执行测试用例**********\")\n        result = pre_trade(order_type, item_id, sku_type, sku_no, act_id_list, use_pcoin)\n        step_1(order_type, item_id, sku_no, use_pcoin)\n>       assert result.success == except_result, result.error\nE       AssertionError: 接口返回码：【 -1 】,返回信息：user.error.login_invalid \nE       assert False == True\n\ntest_06_pre_order.py:27: AssertionError"}, "steps": [{"name": "-----下单前的预下单、点击支付按钮的接口-----", "status": "passed", "parameters": [{"name": "order_type", "value": "1"}, {"name": "item_id", "value": "308"}, {"name": "sku_no", "value": "'20210511420000112137694-2'"}, {"name": "use_pcoin", "value": "False"}], "start": 1623045007313, "stop": 1623045007313}], "attachments": [{"name": "log", "source": "fdbcfc6e-ce18-4835-b888-1cd466c5ab93-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a76422a7-c51b-49ed-ba50-1c51de4047b8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "order_type", "value": "1"}, {"name": "item_id", "value": "308"}, {"name": "sku_type", "value": "1"}, {"name": "sku_no", "value": "'20210511420000112137694-2'"}, {"name": "act_id_list", "value": "[]"}, {"name": "use_pcoin", "value": "False"}, {"name": "except_result", "value": "True"}, {"name": "except_code", "value": "0"}, {"name": "except_msg", "value": "'success'"}], "start": 1623045007215, "stop": 1623045007314, "uuid": "f686631a-2e08-4b46-8306-7365542d9e4f", "historyId": "85cc2340b3a08fe1bc8c5ff212b2bd2b", "testCaseId": "bc04bbb2074bbe8227ceba529777e9b0", "fullName": "testcases.api_test.test_06_pre_order.TestUserTrade#test_user_pre_trade", "labels": [{"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_06_pre_order"}, {"name": "subSuite", "value": "TestUserTrade"}, {"name": "host", "value": "tongchunyan.local"}, {"name": "thread", "value": "49233-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_06_pre_order"}]}